<h1 class="text-3xl font-bold my-8">Thread Chat</h1>
{{#if error}}
<p style="color: red">{{error}}</p>
<a href="/thread">
    <p>Reload Page</p>
</a>
{{/if}}
<div class="threadContainer">
    {{> OpenThreads}}
    <div class="messagesContainer">
        {{> ThreadMessages}}
    </div>
</div>

<script>
    function openCity(evt, cityName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }


    // This function will run after the page content is loaded
document.addEventListener("DOMContentLoaded", function() {
    // Select the messages container
    var messagesContainer = document.querySelector('.messagesContainer');

    // Scroll to the bottom of the container
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
    console.log(messagesContainer.scrollHeight);
});



document.addEventListener("DOMContentLoaded", function() {
    var messageInput = document.getElementById('message');
    var form = document.querySelector('.form'); // Adjust this selector to target your form

    messageInput.addEventListener('keydown', function(event) {
        // Check if CTRL (or Command on Mac) and ENTER keys are pressed
        if ((event.ctrlKey || event.metaKey) && event.key === 'Enter') {
            // Prevent default behavior
            event.preventDefault();

            // Submit the form
            form.submit();
        }
    });
});



</script>
<style>
    #message {
        resize: none;
        padding-top: 7px; /* Adjust this value */
        padding-bottom: 5px; /* Adjust this value */
        height: 40px; /* or whatever your desired height is */
    }

    .threadContainer {
        display: flex;
        flex-direction: row;
        gap: 100px;
    }

    .allThreads {
        background-color: rgb(238, 238, 238);
        padding: 20px 50px;
        width: 30%;
    }

    .messagesContainer {
        display: flex;
        width: 70%;
        justify-content: space-around;
        padding: 25px 0 25px 25px;
        min-height: 700px;
        max-height: 700px;
        overflow-y: scroll;
    }

    .createAssistantForm {
        display: flex;
        flex-direction: column;
        gap: 10px;
        padding: 20px;
        background-color: rgb(216, 216, 216);
    }

    .messages {
        width: 100%;
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
    }

    .user-message {
        list-style: none;
        padding: 5px 0;
    }

    .assistant-message {
        color: #5C8374;
        list-style: none;
        padding: 5px 0;
    }

    .usedAssistant {
        font-size: 12px;
        font-style: italic;
        color: rgb(173, 173, 173);
    }

    .openThreadElement {
        padding: 5px 0;
    }
</style>


<style>
    .tab {
        overflow: hidden;
        display: flex;
        justify-content: space-between;
        min-height: 50px;
    }

    .tabcontent {
        display: none;
        padding: 10px 0;
        border-top: none;
    }

    /* Style the buttons inside the tab */
    .tab button {
        background-color: inherit;
        float: left;
        border: none;
        outline: none;
        cursor: pointer;
        padding: 14px 16px;
        transition: 0.3s;
        font-size: 17px;
    }

    /* Change background color of buttons on hover */
    .tab button:hover {
        background-color: #ddd;
    }

    /* Create an active/current tablink class */
    .tab button.active {
        background-color: #ccc;
    }

    .tabContentCenter {
        display: flex;
        justify-content: center;
    }
</style>